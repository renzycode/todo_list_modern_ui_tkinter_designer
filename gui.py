
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter as tk
from tkinter import ttk
from tkinter.messagebox import showinfo

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets/frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("720x480")
window.configure(bg = "#BB9B9B")


canvas = Canvas(
    window,
    bg = "#BB9B9B",
    height = 480,
    width = 720,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    360.0,
    39.0,
    image=image_image_1
)

canvas.create_text(
    72.0,
    8.0,
    anchor="nw",
    text="Todo List",
    fill="#FFFFFF",
    font=("JetBrainsMonoRoman Medium", 48 * -1)
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    583.0,
    126.0,
    image=image_image_2
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=528.0,
    y=100.0,
    width=112.0,
    height=53.0
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    38.0,
    37.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    270.0,
    126.0,
    image=image_image_4
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    270.0,
    127.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0,
    font=("JetBrainsMonoRoman Medium", 30 * -1)
)
entry_1.place(
    x=33.0,
    y=111.0,
    width=474.0,
    height=30.0
)


style = ttk.Style()
style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('JetBrainsMonoRoman Medium', 18),rowheight=30) # Modify the font of the body
style.configure("mystyle.Treeview.Heading", font=('JetBrainsMonoRoman Medium', 18,'bold'),background="black",foreground='black')
style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders


treeFrame=ttk.Frame(canvas)
treeFrame.place(
    x=33.0,
    y=180.0,
    width=474.0,
    height=250.0
)

treeScroll=ttk.Scrollbar(treeFrame)
treeScroll.pack(side="right",fill="y")


cols=("Name","Date Added")
treeview=ttk.Treeview(treeFrame,show="headings",style="mystyle.Treeview",yscrollcommand=treeScroll.set,columns=cols)
treeview.heading("Name",text="Name",anchor="w")
treeview.heading("Date Added",text="Date Added",anchor="w",)
treeview.column("Name",width=300)
treeview.column("Date Added",width=174)

my_data=[
    [1,'Walking','01/14/2024'],
]

for data in treeview.get_children():
    treeview.delete(data)
for array in my_data:
    treeview.insert('',tk.END,values=array[1:],iid=array[0])
    print(array)
treeview.pack()
treeScroll.config(command=treeview.yview)

window.resizable(False, False)
window.mainloop()
